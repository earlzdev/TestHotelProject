// Generated by view binder compiler. Do not edit!
package com.earl.hotel_search.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ProgressBar;
import android.widget.Toolbar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.earl.hotel_search.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSeatchHotelsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Toolbar actionBar;

  @NonNull
  public final ImageButton filter;

  @NonNull
  public final RecyclerView hotelsRecycler;

  @NonNull
  public final ProgressBar progressBar;

  private FragmentSeatchHotelsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Toolbar actionBar, @NonNull ImageButton filter, @NonNull RecyclerView hotelsRecycler,
      @NonNull ProgressBar progressBar) {
    this.rootView = rootView;
    this.actionBar = actionBar;
    this.filter = filter;
    this.hotelsRecycler = hotelsRecycler;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSeatchHotelsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSeatchHotelsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_seatch_hotels, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSeatchHotelsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.action_bar;
      Toolbar actionBar = ViewBindings.findChildViewById(rootView, id);
      if (actionBar == null) {
        break missingId;
      }

      id = R.id.filter;
      ImageButton filter = ViewBindings.findChildViewById(rootView, id);
      if (filter == null) {
        break missingId;
      }

      id = R.id.hotels_recycler;
      RecyclerView hotelsRecycler = ViewBindings.findChildViewById(rootView, id);
      if (hotelsRecycler == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new FragmentSeatchHotelsBinding((ConstraintLayout) rootView, actionBar, filter,
          hotelsRecycler, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
