// Generated by view binder compiler. Do not edit!
package com.earl.hotel_search.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.earl.hotel_search.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerHotelItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final View darkView;

  @NonNull
  public final TextView distanceFromCenter;

  @NonNull
  public final AppCompatButton freePlacesBtn;

  @NonNull
  public final TextView hotelName;

  @NonNull
  public final AppCompatButton noPlacesBtn;

  @NonNull
  public final RatingBar ratingBar;

  private RecyclerHotelItemBinding(@NonNull CardView rootView, @NonNull View darkView,
      @NonNull TextView distanceFromCenter, @NonNull AppCompatButton freePlacesBtn,
      @NonNull TextView hotelName, @NonNull AppCompatButton noPlacesBtn,
      @NonNull RatingBar ratingBar) {
    this.rootView = rootView;
    this.darkView = darkView;
    this.distanceFromCenter = distanceFromCenter;
    this.freePlacesBtn = freePlacesBtn;
    this.hotelName = hotelName;
    this.noPlacesBtn = noPlacesBtn;
    this.ratingBar = ratingBar;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerHotelItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerHotelItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recycler_hotel_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerHotelItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dark_view;
      View darkView = ViewBindings.findChildViewById(rootView, id);
      if (darkView == null) {
        break missingId;
      }

      id = R.id.distance_from_center;
      TextView distanceFromCenter = ViewBindings.findChildViewById(rootView, id);
      if (distanceFromCenter == null) {
        break missingId;
      }

      id = R.id.free_places_btn;
      AppCompatButton freePlacesBtn = ViewBindings.findChildViewById(rootView, id);
      if (freePlacesBtn == null) {
        break missingId;
      }

      id = R.id.hotel_name;
      TextView hotelName = ViewBindings.findChildViewById(rootView, id);
      if (hotelName == null) {
        break missingId;
      }

      id = R.id.no_places_btn;
      AppCompatButton noPlacesBtn = ViewBindings.findChildViewById(rootView, id);
      if (noPlacesBtn == null) {
        break missingId;
      }

      id = R.id.rating_bar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      return new RecyclerHotelItemBinding((CardView) rootView, darkView, distanceFromCenter,
          freePlacesBtn, hotelName, noPlacesBtn, ratingBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
