// Generated by Dagger (https://dagger.dev).
package com.earl.hotel_search.presentation.hotelDetails;

import dagger.Lazy;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.DoubleCheck;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class HotelDetailsFragment_MembersInjector implements MembersInjector<HotelDetailsFragment> {
  private final Provider<HotelDetailsViewModel.Factory> searchAirportsViewModelFactoryProvider;

  public HotelDetailsFragment_MembersInjector(
      Provider<HotelDetailsViewModel.Factory> searchAirportsViewModelFactoryProvider) {
    this.searchAirportsViewModelFactoryProvider = searchAirportsViewModelFactoryProvider;
  }

  public static MembersInjector<HotelDetailsFragment> create(
      Provider<HotelDetailsViewModel.Factory> searchAirportsViewModelFactoryProvider) {
    return new HotelDetailsFragment_MembersInjector(searchAirportsViewModelFactoryProvider);
  }

  @Override
  public void injectMembers(HotelDetailsFragment instance) {
    injectSearchAirportsViewModelFactory(instance, DoubleCheck.lazy(searchAirportsViewModelFactoryProvider));
  }

  @InjectedFieldSignature("com.earl.hotel_search.presentation.hotelDetails.HotelDetailsFragment.searchAirportsViewModelFactory")
  public static void injectSearchAirportsViewModelFactory(HotelDetailsFragment instance,
      Lazy<HotelDetailsViewModel.Factory> searchAirportsViewModelFactory) {
    instance.searchAirportsViewModelFactory = searchAirportsViewModelFactory;
  }
}
