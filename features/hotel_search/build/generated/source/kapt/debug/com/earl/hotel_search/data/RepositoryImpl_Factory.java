// Generated by Dagger (https://dagger.dev).
package com.earl.hotel_search.data;

import com.earl.hotel_search.domain.models.Hotel;
import com.earl.hotel_search.domain.models.HotelDetails;
import com.earl.remotedatasource.NetworkService;
import com.earl.remotedatasource.mappers.HotelRemoteToMainMapper;
import com.earl.remotedatasource.mappers.HotelsDetailsRemoteMapper;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryImpl_Factory implements Factory<RepositoryImpl> {
  private final Provider<NetworkService> networkServiceProvider;

  private final Provider<HotelRemoteToMainMapper<Hotel>> hotelRemoteToMainMapperProvider;

  private final Provider<HotelsDetailsRemoteMapper<HotelDetails>> hotelDetailsRemoteToMainMapperProvider;

  public RepositoryImpl_Factory(Provider<NetworkService> networkServiceProvider,
      Provider<HotelRemoteToMainMapper<Hotel>> hotelRemoteToMainMapperProvider,
      Provider<HotelsDetailsRemoteMapper<HotelDetails>> hotelDetailsRemoteToMainMapperProvider) {
    this.networkServiceProvider = networkServiceProvider;
    this.hotelRemoteToMainMapperProvider = hotelRemoteToMainMapperProvider;
    this.hotelDetailsRemoteToMainMapperProvider = hotelDetailsRemoteToMainMapperProvider;
  }

  @Override
  public RepositoryImpl get() {
    return newInstance(networkServiceProvider.get(), hotelRemoteToMainMapperProvider.get(), hotelDetailsRemoteToMainMapperProvider.get());
  }

  public static RepositoryImpl_Factory create(Provider<NetworkService> networkServiceProvider,
      Provider<HotelRemoteToMainMapper<Hotel>> hotelRemoteToMainMapperProvider,
      Provider<HotelsDetailsRemoteMapper<HotelDetails>> hotelDetailsRemoteToMainMapperProvider) {
    return new RepositoryImpl_Factory(networkServiceProvider, hotelRemoteToMainMapperProvider, hotelDetailsRemoteToMainMapperProvider);
  }

  public static RepositoryImpl newInstance(NetworkService networkService,
      HotelRemoteToMainMapper<Hotel> hotelRemoteToMainMapper,
      HotelsDetailsRemoteMapper<HotelDetails> hotelDetailsRemoteToMainMapper) {
    return new RepositoryImpl(networkService, hotelRemoteToMainMapper, hotelDetailsRemoteToMainMapper);
  }
}
